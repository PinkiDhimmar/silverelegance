<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Admin Dashboard - Silver Elegance</title>
  <link href="/public/css/style.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <style>
    .card {
      border-radius: 0.6rem;
      box-shadow: 0 4px 12px rgb(0 0 0 / 0.05);
    }
    .stats-card h5 {
      font-weight: 600;
      color: #495057;
      text-transform: uppercase;
      letter-spacing: 0.05em;
      margin-bottom: 0.3rem;
    }
    .stats-card h3 {
      font-weight: 700;
      font-size: 2.2rem;
      color: #0d6efd;
    }
    .topbar {
      padding: 1.25rem 0;
      border-bottom: 1px solid #dee2e6;
      margin-bottom: 1.5rem;
    }
    .page-title {
      margin-bottom: 2rem;
    }
    table thead {
      background-color: #e9ecef;
    }
    table tbody tr:hover {
      background-color: #f1f3f5;
    }
    @media (max-width: 576px) {
      .stats-card h3 {
        font-size: 1.6rem;
      }
    }
  </style>
</head>
<body>

<div class="wrapper">
  <%- include('../partials/admin-sidebar') %>

  <div class="content container my-4">
    <div class="topbar d-flex justify-content-between align-items-center">
      <span><strong>Welcome, <%= user.name %></strong></span>
      <a href="/logout" class="btn btn-sm btn-outline-secondary">Logout</a>
    </div>

    <div class="page-title">
      <h2>Admin Dashboard</h2>
      <p>Use the sidebar to manage your store content.</p>
    </div>

    <!-- Stats Cards -->
    <div class="row mb-4" id="stats-row">
      <!-- Stats cards injected here by JS -->
    </div>

    <!-- Recent Orders -->
    <div class="card mb-4 shadow-sm">
      <div class="card-header">
        <strong>Recent Orders</strong>
      </div>
      <div class="card-body p-0">
        <table class="table mb-0 table-striped">
          <thead>
            <tr>
              <th>ID</th>
              <th>Customer</th>
              <th>Status</th>
              <th>Total</th>
              <th>Date</th>
            </tr>
          </thead>
          <tbody id="recent-orders-body">
            <tr><td colspan="5" class="text-center py-3">Loading...</td></tr>
          </tbody>
        </table>
      </div>
    </div>

    <!-- Revenue Chart -->
    <div class="card shadow-sm">
      <div class="card-header">
        <strong>Revenue Over Time</strong>
      </div>
      <div class="card-body">
        <canvas id="revenueChart" height="100"></canvas>
      </div>
    </div>
  </div>
</div>

<!-- Chart.js CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  async function fetchDashboardData() {
    try {
      const res = await fetch('/admin/dashboard-data');
      if (!res.ok) throw new Error('Failed to fetch dashboard data');
      const data = await res.json();

      // Populate stats cards
      const statsRow = document.getElementById('stats-row');
      statsRow.innerHTML = '';
      const stats = data.stats;
      const statItems = [
        { title: 'Total Orders', value: stats.total_orders },
        { title: 'Total Customer', value: stats.total_customers },
        { title: 'Total Revenue', value: '$' + stats.total_revenue.toFixed(2) },
        { title: 'Total Products', value: stats.total_products },
      ];
      statItems.forEach(item => {
        const col = document.createElement('div');
        col.className = 'col-md-3 mb-3';
        col.innerHTML = `
          <div class="card stats-card text-center p-3 shadow-sm">
            <h5>${item.title}</h5>
            <h3>${item.value}</h3>
          </div>`;
        statsRow.appendChild(col);
      });

      // Populate recent orders
      const ordersBody = document.getElementById('recent-orders-body');
      ordersBody.innerHTML = '';
      if (data.recentOrders.length === 0) {
        ordersBody.innerHTML = '<tr><td colspan="5" class="text-center">No recent orders</td></tr>';
      } else {
        data.recentOrders.forEach(order => {
          const dateStr = new Date(order.created_at).toLocaleDateString();
          ordersBody.innerHTML += `
            <tr>
              <td>${order.id}</td>
              <td>${order.name}</td>
              <td>${order.status}</td>
              <td>$${parseFloat(order.total_amount).toFixed(2)}</td>
              <td>${dateStr}</td>
            </tr>`;
        });
      }

      // Render revenue chart
      const ctx = document.getElementById('revenueChart').getContext('2d');
      if(window.revenueChartInstance) {
        window.revenueChartInstance.destroy();
      }

      const labels = data.chartData?.labels || [];
      const values = data.chartData?.values || [];

      window.revenueChartInstance = new Chart(ctx, {
        type: 'line',
        data: {
          labels: labels,
          datasets: [{
            label: 'Revenue ($)',
            data: values,
            fill: true,
            borderColor: '#0d6efd',
            backgroundColor: 'rgba(13, 110, 253, 0.2)',
            tension: 0.3,
            pointRadius: 4,
            pointBackgroundColor: '#0d6efd',
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true,
              ticks: { stepSize: 10 }
            }
          },
          plugins: {
            legend: { display: true }
          }
        }
      });

    } catch (error) {
      console.error(error);
      alert('Failed to load dashboard data. Please try again later.');
    }
  }

  window.onload = fetchDashboardData;
</script>

</body>
</html>
